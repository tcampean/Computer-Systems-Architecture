     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                              a db 3
    15 00000001 02                              b db 2
    16 00000002 0A                              c db 10
    17 00000003 0400                            d dw 4
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start
    20          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    21                                          ; ...
    22 00000000 A0[01000000]                    mov al,[b]
    23 00000005 8A1D[02000000]                  mov bl,[c]
    24 0000000B B432                            mov ah,50
    25 0000000D 28C4                            sub ah,al
    26 0000000F 28DC                            sub ah,bl
    27 00000011 88E0                            mov al,ah
    28 00000013 B102                            mov cl,2
    29 00000015 F6E1                            mul cl
    30 00000017 6689C3                          mov bx,ax
    31 0000001A 66A1[00000000]                  mov ax,[a]
    32 00000020 F6E0                            mul al
    33 00000022 6601C3                          add bx,ax
    34 00000025 66031D[03000000]                add bx,[d]
    35                                          
    36                                          
    37                                      
    38                                          ; exit(0)
    39 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
