     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                              a db 3
    15 00000001 02                              b db 2
    16 00000002 0A                              c db 10
    17 00000003 04                              d db 4
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[02000000]                    mov al,[c] ;AL=10
    23 00000005 2A05[00000000]                  sub al,[a] ;AL=AL - 3 ; AL = 7
    24 0000000B 2A05[03000000]                  sub al,[d] ;AL= AL -4 ; AL =3
    25                                          
    26 00000011 8A1D[02000000]                  mov bl,[c] ;BL = 10
    27 00000017 2A1D[01000000]                  sub bl,[b] ;bl = bl -2
    28                                          
    29 0000001D 00D8                            add al,bl ;AL = AL +BL
    30 0000001F 2A05[00000000]                  sub al,[a] ;AL=AL -a
    31                                      
    32                                          ; exit(0)
    33 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
