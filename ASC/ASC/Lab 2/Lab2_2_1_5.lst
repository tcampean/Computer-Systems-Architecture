     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0300                            a dw 3
    15 00000002 0200                            b dw 2
    16 00000004 0A00                            c dw 10
    17 00000006 0400                            d dw 4
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start
    20          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    21                                          ; ...
    22 00000000 66A1[04000000]                  mov ax,[c]
    23 00000006 660305[02000000]                add ax,[b]
    24 0000000D 660305[02000000]                add ax,[b]
    25                                          
    26 00000014 668B1D[04000000]                mov bx,[c] 
    27 0000001B 66031D[00000000]                add bx,[a]
    28 00000022 66031D[06000000]                add bx,[d]
    29                                          
    30 00000029 6629D8                          sub ax,bx 
    31                                      
    32                                          ; exit(0)
    33 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
