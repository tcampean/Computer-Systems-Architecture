     1                                  ; The following code will open a file called "ana.txt" from current folder,
     2                                  ; it will read maximum 100 characters from this file,
     3                                  ; and it will display to the console the number of chars and the text we've read.
     4                                  
     5                                  ; The program will use:
     6                                  ; - the function fopen() to open/create the file
     7                                  ; - the function fread() to read from file
     8                                  ; - the function printf() to display a text
     9                                  ; - the function fclose() to close the created file.
    10                                  
    11                                  ; Because the fopen() call uses the file access mode "r", the file will be open for
    12                                  ; reading. The file must exist, otherwise the fopen() call will fail.
    13                                  ; For details about the file access modes see the section "Theory".
    14                                  
    15                                  ; Any string used by printf() must be null-terminated ('\0').
    16                                  
    17                                  bits 32
    18                                  
    19                                  global start
    20                                  
    21                                  ; declare external functions needed by our program
    22                                  extern exit, fopen, fprintf, fclose
    23                                  import exit msvcrt.dll
    24                                  import fopen msvcrt.dll
    25                                  import fprintf msvcrt.dll
    26                                  import fclose msvcrt.dll
    27                                  
    28                                  ; our data is declared here (the variables needed by our program)
    29                                  segment data use32 class=data
    30 00000000 657832302E74787400          file_name db "ex20.txt", 0   ; filename to be read
    31 00000009 7700                        access_mode db "w", 0       ; file access mode:
    32                                                                  ; r - opens a file for reading. The file must exist
    33 0000000B FFFFFFFF                    file_descriptor dd -1
    34 0000000F 00000000                    sum dd 0
    35 00000013 616E6120636F617365          text db "ana coase"; string to hold the text to be written on the file
    36                                      len equ $-text
    37 0000001C 00<rept>                    d times len db 0 ; the string which will store the modified string
    38                                  
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42                                         ; call fopen() to create the file
    43                                          ; fopen() will return a file descriptor in the EAX or 0 in case of error
    44                                          ; eax = fopen(file_name, access_mode)
    45 00000000 68[09000000]                    push dword access_mode     
    46 00000005 68[00000000]                    push dword file_name
    47 0000000A FF15[00000000]                  call [fopen]
    48 00000010 83C408                          add esp, 4*2                ; clean-up the stack
    49                                  
    50 00000013 A3[0B000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    51                                  
    52 00000018 B9FFFFFFFF                      mov ecx,-1
    53 0000001D BE00000000                      mov esi, 0
    54 00000022 BB00000000                      mov ebx,0
    55 00000027 B800000000                      mov eax,0
    56 0000002C BF00000000                      mov edi,0
    57                                          
    58 00000031 FC                              cld
    59                                          Check: ; we start going through the elements of the file one by one
    60 00000032 83C101                              add ecx,1
    61 00000035 83F909                              cmp ecx,len
    62 00000038 7447                                je final ; if we reach the end of the text we will print the string and exit
    63 0000003A 80C301                              add bl,1 ; will hold the count
    64 0000003D 8A86[13000000]                      mov al, [text+esi] ; we put the element in al
    65 00000043 EB13                                jmp compare3
    66                                              
    67 00000045 E2EB                            loop Check
    68                                          
    69                                          
    70                                          addition: ; upon comparison if the element is a special caracter then we raise the count
    71 00000047 F7C101000000                        test ecx,1
    72 0000004D 7523                                jnz addindex ; we check wether or not ecx is odd or even
    73 0000004F 8886[1C000000]                      mov [d+esi],al ; if it's odd then we are going to put the element as it is
    74 00000055 46                                  inc esi
    75 00000056 EBDA                                jmp Check
    76                                          compare3:
    77 00000058 3C7A                                cmp al,122 ; we check if the element is a lowercase letter
    78 0000005A 7609                                jbe compare4
    79 0000005C 8886[1C000000]                      mov [d+esi],al ; if its not we are just going to put the normal element
    80 00000062 46                                  inc esi
    81 00000063 EBCD                                jmp Check
    82                                          compare4:
    83 00000065 3C61                                cmp al,97
    84 00000067 73DE                                jae addition ;if the element is a letter then we will go through the addition
    85 00000069 8886[1C000000]                      mov [d+esi],al ; if the element is not a lowercase letter then we are just going to add it normally
    86 0000006F 46                                  inc esi
    87 00000070 EBC0                                jmp Check    
    88                                          addindex:
    89 00000072 80C330                              add bl,'0'
    90 00000075 889E[1C000000]                      mov [d+esi],bl ; if the element position is even then we are going to change it with it's position
    91 0000007B 80EB30                              sub bl,'0'
    92 0000007E 46                                  inc esi
    93 0000007F EBB1                                jmp Check
    94                                          
    95                                         
    96                                  
    97                                        final:
    98                                          
    99                                       ; write the text to file using fprintf()
   100                                          ; fprintf(file_descriptor, text)
   101 00000081 68[1C000000]                    push dword d
   102 00000086 FF35[0B000000]                  push dword [file_descriptor]
   103 0000008C FF15[00000000]                  call [fprintf]
   104 00000092 83C408                          add esp, 4*2
   105                                  
   106                                          ; call fclose() to close the file
   107                                          ; fclose(file_descriptor)
   108 00000095 FF35[0B000000]                  push dword [file_descriptor]
   109 0000009B FF15[00000000]                  call [fclose]
   110 000000A1 83C404                          add esp, 4
   111                                          ; exit(0)
   112 000000A4 6A00                            push dword 0
   113 000000A6 FF15[00000000]                  call [exit]
